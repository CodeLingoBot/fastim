// Code generated by protoc-gen-go.
// source: message.proto
// DO NOT EDIT!

/*
Package protocol is a generated protocol buffer package.

It is generated from these files:
	message.proto

It has these top-level messages:
	Message
	SessionClosed
*/
package protocol

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
const _ = proto.ProtoPackageIsVersion1

type RouterCMD int32

const (
	RouterCMD_SESSION_CLOSED RouterCMD = 0
	RouterCMD_HEATBEAT       RouterCMD = 100
)

var RouterCMD_name = map[int32]string{
	0:   "SESSION_CLOSED",
	100: "HEATBEAT",
}
var RouterCMD_value = map[string]int32{
	"SESSION_CLOSED": 0,
	"HEATBEAT":       100,
}

func (x RouterCMD) Enum() *RouterCMD {
	p := new(RouterCMD)
	*p = x
	return p
}
func (x RouterCMD) String() string {
	return proto.EnumName(RouterCMD_name, int32(x))
}
func (x *RouterCMD) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(RouterCMD_value, data, "RouterCMD")
	if err != nil {
		return err
	}
	*x = RouterCMD(value)
	return nil
}
func (RouterCMD) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

// router -> backend, exclude RouterCMD
type Message struct {
	Cmd              *int32  `protobuf:"varint,1,req,name=cmd" json:"cmd,omitempty"`
	Biz              *int32  `protobuf:"varint,2,opt,name=biz" json:"biz,omitempty"`
	Product          *int32  `protobuf:"varint,3,opt,name=product" json:"product,omitempty"`
	CliVersion       *int32  `protobuf:"varint,4,opt,name=cliVersion" json:"cliVersion,omitempty"`
	ProtocolVersion  *int32  `protobuf:"varint,5,opt,name=protocolVersion" json:"protocolVersion,omitempty"`
	SessionId        *string `protobuf:"bytes,6,opt,name=sessionId" json:"sessionId,omitempty"`
	SeqId            *int64  `protobuf:"varint,7,opt,name=seqId" json:"seqId,omitempty"`
	Data             []byte  `protobuf:"bytes,8,opt,name=data" json:"data,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *Message) Reset()                    { *m = Message{} }
func (m *Message) String() string            { return proto.CompactTextString(m) }
func (*Message) ProtoMessage()               {}
func (*Message) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Message) GetCmd() int32 {
	if m != nil && m.Cmd != nil {
		return *m.Cmd
	}
	return 0
}

func (m *Message) GetBiz() int32 {
	if m != nil && m.Biz != nil {
		return *m.Biz
	}
	return 0
}

func (m *Message) GetProduct() int32 {
	if m != nil && m.Product != nil {
		return *m.Product
	}
	return 0
}

func (m *Message) GetCliVersion() int32 {
	if m != nil && m.CliVersion != nil {
		return *m.CliVersion
	}
	return 0
}

func (m *Message) GetProtocolVersion() int32 {
	if m != nil && m.ProtocolVersion != nil {
		return *m.ProtocolVersion
	}
	return 0
}

func (m *Message) GetSessionId() string {
	if m != nil && m.SessionId != nil {
		return *m.SessionId
	}
	return ""
}

func (m *Message) GetSeqId() int64 {
	if m != nil && m.SeqId != nil {
		return *m.SeqId
	}
	return 0
}

func (m *Message) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

// cmd: SESSION_CLOSED, router -> backend
type SessionClosed struct {
	SessionId        *string `protobuf:"bytes,1,req,name=sessionId" json:"sessionId,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *SessionClosed) Reset()                    { *m = SessionClosed{} }
func (m *SessionClosed) String() string            { return proto.CompactTextString(m) }
func (*SessionClosed) ProtoMessage()               {}
func (*SessionClosed) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *SessionClosed) GetSessionId() string {
	if m != nil && m.SessionId != nil {
		return *m.SessionId
	}
	return ""
}

func init() {
	proto.RegisterType((*Message)(nil), "protocol.Message")
	proto.RegisterType((*SessionClosed)(nil), "protocol.SessionClosed")
	proto.RegisterEnum("protocol.RouterCMD", RouterCMD_name, RouterCMD_value)
}

var fileDescriptor0 = []byte{
	// 218 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x54, 0x8e, 0xc1, 0x4e, 0x85, 0x30,
	0x10, 0x45, 0xe5, 0xf1, 0x10, 0x3a, 0x82, 0x60, 0x37, 0x76, 0x49, 0x58, 0x19, 0x13, 0xfd, 0x07,
	0x05, 0x12, 0x49, 0x44, 0x12, 0x6b, 0xdc, 0x1a, 0x6c, 0x1b, 0x43, 0x02, 0x56, 0x69, 0xd9, 0xf8,
	0x17, 0xfe, 0xb1, 0x43, 0x09, 0x0b, 0x17, 0x4d, 0x73, 0xce, 0x6d, 0xef, 0x0c, 0x24, 0x93, 0x32,
	0xa6, 0xff, 0x50, 0xb7, 0x5f, 0xb3, 0xb6, 0x9a, 0x46, 0xee, 0x12, 0x7a, 0x2c, 0x7e, 0x3d, 0x08,
	0xdb, 0x2d, 0xa3, 0x67, 0xe0, 0x8b, 0x49, 0x32, 0x2f, 0x3f, 0x5c, 0x05, 0x2b, 0xbc, 0x0f, 0x3f,
	0xec, 0x90, 0x7b, 0x08, 0x29, 0x84, 0xf8, 0x43, 0x2e, 0xc2, 0x32, 0xdf, 0x09, 0x0a, 0x20, 0xc6,
	0xe1, 0x55, 0xcd, 0x66, 0xd0, 0x9f, 0xec, 0xe8, 0xdc, 0x25, 0xa4, 0x7b, 0xed, 0x1e, 0x04, 0x2e,
	0xb8, 0x00, 0x62, 0x70, 0x04, 0x8a, 0x46, 0xb2, 0x53, 0x54, 0x84, 0x26, 0x10, 0x18, 0xf5, 0x8d,
	0x18, 0x22, 0xfa, 0x34, 0x86, 0xa3, 0xec, 0x6d, 0xcf, 0x22, 0xa4, 0xb8, 0x28, 0x20, 0xe1, 0xdb,
	0xfb, 0x72, 0xd4, 0x46, 0xc9, 0xff, 0x05, 0xeb, 0x7a, 0xe4, 0xfa, 0x06, 0xc8, 0xb3, 0x5e, 0xac,
	0x9a, 0xcb, 0xb6, 0xc2, 0x6d, 0xce, 0x79, 0xcd, 0x79, 0xd3, 0x3d, 0xbd, 0x95, 0x8f, 0x1d, 0xaf,
	0xab, 0xec, 0x04, 0x2b, 0xa3, 0x87, 0xfa, 0xee, 0xe5, 0x1e, 0x4f, 0x26, 0xff, 0x02, 0x00, 0x00,
	0xff, 0xff, 0x74, 0xd2, 0xfd, 0x31, 0x00, 0x01, 0x00, 0x00,
}
