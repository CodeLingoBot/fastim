// Code generated by protoc-gen-go.
// source: message.proto
// DO NOT EDIT!

/*
Package protocol is a generated protocol buffer package.

It is generated from these files:
	message.proto
	session.proto
	sync.proto

It has these top-level messages:
	Message
	LoginReq
	LoginRsp
	OfflineNotify
	StatusNotify
	SyncNotify
	SyncReq
	SyncRsp
*/
package protocol

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
const _ = proto.ProtoPackageIsVersion1

type RouterCMD int32

const (
	RouterCMD_SESSION_CLOSED          RouterCMD = 0
	RouterCMD_SESSION_CLOSED_COMPLETE RouterCMD = 1
	RouterCMD_CHANGE_ROUTER           RouterCMD = 10
	RouterCMD_HEATBEAT                RouterCMD = 99
)

var RouterCMD_name = map[int32]string{
	0:  "SESSION_CLOSED",
	1:  "SESSION_CLOSED_COMPLETE",
	10: "CHANGE_ROUTER",
	99: "HEATBEAT",
}
var RouterCMD_value = map[string]int32{
	"SESSION_CLOSED":          0,
	"SESSION_CLOSED_COMPLETE": 1,
	"CHANGE_ROUTER":           10,
	"HEATBEAT":                99,
}

func (x RouterCMD) Enum() *RouterCMD {
	p := new(RouterCMD)
	*p = x
	return p
}
func (x RouterCMD) String() string {
	return proto.EnumName(RouterCMD_name, int32(x))
}
func (x *RouterCMD) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(RouterCMD_value, data, "RouterCMD")
	if err != nil {
		return err
	}
	*x = RouterCMD(value)
	return nil
}
func (RouterCMD) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type BaseBiz int32

const (
	BaseBiz_SESSION BaseBiz = 1
	BaseBiz_FRIENDS BaseBiz = 2
	BaseBiz_MESSAGE BaseBiz = 3
	BaseBiz_GROUP   BaseBiz = 4
)

var BaseBiz_name = map[int32]string{
	1: "SESSION",
	2: "FRIENDS",
	3: "MESSAGE",
	4: "GROUP",
}
var BaseBiz_value = map[string]int32{
	"SESSION": 1,
	"FRIENDS": 2,
	"MESSAGE": 3,
	"GROUP":   4,
}

func (x BaseBiz) Enum() *BaseBiz {
	p := new(BaseBiz)
	*p = x
	return p
}
func (x BaseBiz) String() string {
	return proto.EnumName(BaseBiz_name, int32(x))
}
func (x *BaseBiz) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(BaseBiz_value, data, "BaseBiz")
	if err != nil {
		return err
	}
	*x = BaseBiz(value)
	return nil
}
func (BaseBiz) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

type BaseCMD int32

const (
	// ack
	BaseCMD_ACK BaseCMD = 100
	// sync protocol about
	BaseCMD_NTY_SYNC BaseCMD = 101
	BaseCMD_REQ_SYNC BaseCMD = 102
	BaseCMD_RSP_SYNC BaseCMD = 103
	// session about
	BaseCMD_REQ_LOGIN BaseCMD = 200
	BaseCMD_RSP_LOGIN BaseCMD = 201
)

var BaseCMD_name = map[int32]string{
	100: "ACK",
	101: "NTY_SYNC",
	102: "REQ_SYNC",
	103: "RSP_SYNC",
	200: "REQ_LOGIN",
	201: "RSP_LOGIN",
}
var BaseCMD_value = map[string]int32{
	"ACK":       100,
	"NTY_SYNC":  101,
	"REQ_SYNC":  102,
	"RSP_SYNC":  103,
	"REQ_LOGIN": 200,
	"RSP_LOGIN": 201,
}

func (x BaseCMD) Enum() *BaseCMD {
	p := new(BaseCMD)
	*p = x
	return p
}
func (x BaseCMD) String() string {
	return proto.EnumName(BaseCMD_name, int32(x))
}
func (x *BaseCMD) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(BaseCMD_value, data, "BaseCMD")
	if err != nil {
		return err
	}
	*x = BaseCMD(value)
	return nil
}
func (BaseCMD) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

// router -> backend, exclude RouterCMD
type Message struct {
	Cmd              *int32  `protobuf:"varint,1,req,name=cmd" json:"cmd,omitempty"`
	Biz              *int32  `protobuf:"varint,2,opt,name=biz" json:"biz,omitempty"`
	Product          *int32  `protobuf:"varint,3,opt,name=product" json:"product,omitempty"`
	CliVersion       *int32  `protobuf:"varint,4,opt,name=cliVersion" json:"cliVersion,omitempty"`
	CliSeqId         *int32  `protobuf:"varint,5,opt,name=cliSeqId" json:"cliSeqId,omitempty"`
	ProtocolVersion  *int32  `protobuf:"varint,6,opt,name=protocolVersion" json:"protocolVersion,omitempty"`
	SessionId        *string `protobuf:"bytes,7,opt,name=sessionId" json:"sessionId,omitempty"`
	MsgId            *string `protobuf:"bytes,8,opt,name=msgId" json:"msgId,omitempty"`
	Data             []byte  `protobuf:"bytes,9,opt,name=data" json:"data,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *Message) Reset()                    { *m = Message{} }
func (m *Message) String() string            { return proto.CompactTextString(m) }
func (*Message) ProtoMessage()               {}
func (*Message) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Message) GetCmd() int32 {
	if m != nil && m.Cmd != nil {
		return *m.Cmd
	}
	return 0
}

func (m *Message) GetBiz() int32 {
	if m != nil && m.Biz != nil {
		return *m.Biz
	}
	return 0
}

func (m *Message) GetProduct() int32 {
	if m != nil && m.Product != nil {
		return *m.Product
	}
	return 0
}

func (m *Message) GetCliVersion() int32 {
	if m != nil && m.CliVersion != nil {
		return *m.CliVersion
	}
	return 0
}

func (m *Message) GetCliSeqId() int32 {
	if m != nil && m.CliSeqId != nil {
		return *m.CliSeqId
	}
	return 0
}

func (m *Message) GetProtocolVersion() int32 {
	if m != nil && m.ProtocolVersion != nil {
		return *m.ProtocolVersion
	}
	return 0
}

func (m *Message) GetSessionId() string {
	if m != nil && m.SessionId != nil {
		return *m.SessionId
	}
	return ""
}

func (m *Message) GetMsgId() string {
	if m != nil && m.MsgId != nil {
		return *m.MsgId
	}
	return ""
}

func (m *Message) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

func init() {
	proto.RegisterType((*Message)(nil), "protocol.Message")
	proto.RegisterEnum("protocol.RouterCMD", RouterCMD_name, RouterCMD_value)
	proto.RegisterEnum("protocol.BaseBiz", BaseBiz_name, BaseBiz_value)
	proto.RegisterEnum("protocol.BaseCMD", BaseCMD_name, BaseCMD_value)
}

var fileDescriptor0 = []byte{
	// 336 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x54, 0x8f, 0xcf, 0x4e, 0xb3, 0x40,
	0x14, 0xc5, 0x3f, 0x4a, 0xf9, 0x80, 0x6b, 0xff, 0x8c, 0xb3, 0x29, 0x89, 0x9b, 0xc6, 0x95, 0xe9,
	0xc2, 0x17, 0x70, 0x45, 0xe9, 0x48, 0x89, 0x05, 0x2a, 0x83, 0x26, 0x4d, 0x34, 0x04, 0x61, 0x6c,
	0x48, 0x5a, 0x51, 0xa0, 0x9b, 0xbe, 0x8e, 0x2f, 0xa3, 0x6f, 0xe5, 0x65, 0xb0, 0x0b, 0x17, 0x84,
	0xfc, 0xce, 0xb9, 0xf7, 0x9c, 0xb9, 0x30, 0xdc, 0x8b, 0xba, 0x4e, 0xb7, 0xe2, 0xfa, 0xbd, 0x2a,
	0x9b, 0x92, 0x1a, 0xf2, 0x97, 0x95, 0xbb, 0xcb, 0x4f, 0x05, 0x74, 0xbf, 0xf3, 0xe8, 0x19, 0xa8,
	0xd9, 0x3e, 0xb7, 0x94, 0x69, 0xef, 0x4a, 0x6b, 0xe1, 0xa5, 0x38, 0x5a, 0xbd, 0xa9, 0x82, 0x30,
	0x06, 0x1d, 0x37, 0xf2, 0x43, 0xd6, 0x58, 0xaa, 0x14, 0x28, 0x40, 0xb6, 0x2b, 0x1e, 0x45, 0x55,
	0x17, 0xe5, 0x9b, 0xd5, 0x97, 0x1a, 0x01, 0x03, 0x35, 0x2e, 0x3e, 0xbc, 0xdc, 0xd2, 0xa4, 0x32,
	0x81, 0xf1, 0xa9, 0xe8, 0x34, 0xfa, 0x5f, 0x1a, 0xe7, 0x60, 0xd6, 0x58, 0x8a, 0x02, 0xce, 0xea,
	0x28, 0x99, 0x74, 0x08, 0xda, 0xbe, 0xde, 0x22, 0x1a, 0x12, 0x07, 0xd0, 0xcf, 0xd3, 0x26, 0xb5,
	0x4c, 0xa4, 0xc1, 0xec, 0x19, 0xcc, 0xa8, 0x3c, 0x34, 0xa2, 0x72, 0xfc, 0x05, 0x76, 0x8f, 0x38,
	0xe3, 0xdc, 0x0b, 0x83, 0xc4, 0x59, 0x85, 0x9c, 0x2d, 0xc8, 0x3f, 0x7a, 0x01, 0x93, 0xbf, 0x5a,
	0xe2, 0x84, 0xfe, 0x7a, 0xc5, 0x62, 0x46, 0x14, 0x6c, 0x1b, 0x3a, 0x4b, 0x3b, 0x70, 0x59, 0x12,
	0x85, 0x0f, 0x31, 0x8b, 0x08, 0x60, 0xbc, 0xb1, 0x64, 0x76, 0x3c, 0xc7, 0x8f, 0x64, 0xb3, 0x1b,
	0xd0, 0xe7, 0x69, 0x2d, 0xe6, 0xc5, 0x11, 0xcf, 0xd6, 0x7f, 0x83, 0x70, 0x11, 0xe1, 0x36, 0xf2,
	0x58, 0xb0, 0xe0, 0xa4, 0xd7, 0x82, 0x8f, 0x8e, 0xed, 0x32, 0xa2, 0x52, 0x13, 0x34, 0x17, 0xc3,
	0xd6, 0xa4, 0x3f, 0x7b, 0xea, 0x96, 0xdb, 0x97, 0xe9, 0xa0, 0xda, 0xce, 0x1d, 0xc9, 0xdb, 0xf8,
	0x20, 0xde, 0x24, 0x7c, 0x13, 0x38, 0x44, 0xb4, 0x14, 0xb1, 0xfb, 0x8e, 0x5e, 0x25, 0xf1, 0x75,
	0x47, 0x5b, 0x3a, 0xc2, 0xcb, 0xd0, 0x5b, 0x85, 0xae, 0x17, 0x90, 0x2f, 0x45, 0x32, 0xba, 0x1d,
	0x7f, 0x2b, 0x3f, 0x01, 0x00, 0x00, 0xff, 0xff, 0xc5, 0x5a, 0x0a, 0x71, 0xb9, 0x01, 0x00, 0x00,
}
